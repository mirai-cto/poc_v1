version: '3.8'

services:
  # PostgreSQL database
  db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: cnc_tool_recommender
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Java Spring Boot backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/cnc_tool_recommender
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ML_MODULE_URL=http://ml_module:5050
    volumes:
      - ./uploads:/app/uploads

  # React frontend with Vite
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Python ML module
  ml_module:
    build:
      context: ./ml_module
      dockerfile: Dockerfile
    ports:
      - "5050:5050"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - FLASK_PORT=5050
    volumes:
      - ./ml_module:/app
      - ./data:/app/data

  # Database seeder (runs once)
  db_seeder:
    build:
      context: ./database
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=cnc_tool_recommender
      - DB_USER=postgres
      - DB_PASSWORD=password
    volumes:
      - ./data:/app/data
    command: python seed.py

volumes:
  postgres_data: 